ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:6]))
mutate(AveDiff = SummedGW/5)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:6])) %>%
mutate(AveDiff = SummedGW/5)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[GW_Filter])) %>%
mutate(AveDiff = SummedGW/5)
GW_length <- 6
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(GW_Filter)) %>%
mutate(AveDiff = SummedGW/5)
ArsData[2:6]
ArsData[2:6,]
ArsData[2:6]
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:GW_length])) %>%
mutate(AveDiff = SummedGW/5)
class(6)
class(GW_length)
length(ArsData)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:length(ArsData)])) %>%
mutate(AveDiff = SummedGW/5)
rlang::last_error()
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:6])) %>%
mutate(AveDiff = SummedGW/5)
ArsData[2:6]
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:6]))
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:6])) %>%
mutate(AveDiff = SummedGW/5)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:6]))
rlang::last_error()
lang::last_trace()
a<-as.data.frame(c(2000:2005))
rm(list=ls())
a<-as.data.frame(c(2000:2005))
a$Col1<-c(1:6)
a$Col2<-seq(2,12,2)
colnames(a)<-c("year","Col1","Col2")
for (i in 1:2){
a[[paste("Var_", i, sep="")]]<-i*a[[paste("Col", i, sep="")]]
}
a
for (i in 1:2){
a[[paste("Var_", i, sep="")]]<-i*a[[paste("Col", i, sep="")]]
}
rm(list=ls())
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
Fix_Diff <- read.csv("1.Data/FixtureDifficultiesv_01.csv")
GW_start <- "GW12"
GW_length <- 6
team = 'Arsenal'
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
View(GW_Filter)
ArsData <- df %>% select(Team, GW_Filter) %>% filter(Team == team)
df <- Fix_Diff
ArsData <- df %>% select(Team, GW_Filter) %>% filter(Team == team)
View(ArsData)
ArsData <- df %>% select(team, GW_Filter) %>% filter(Team == team)
ArsData <- df %>% select(Team, GW_Filter) %>% filter(Team == team)
View(ArsData)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedGW = sum(ArsData[2:6])) %>%
mutate(AveDiff = SummedGW/5)
ArsData %>% select(Team, GW_Filter)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(select(., GW_start:GW18)
SummedGW = sum(ArsData[2:6])) %>%
mutate(AveDiff = SummedGW/5)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(select(., GW_start:GW18) %>% rowSums(na.rm = TRUE))
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(select(., GW_start:GW18) %>% rowSums(na.rm = TRUE))
View(x)
View(ArsData)
rev(ArsData)[1]
names(rev(ArsData)[1])
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(select(., GW_start:names(rev(ArsData)[1])) %>% rowSums(na.rm = TRUE))
View(x)
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE))
View(x)
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE)) %>%
x %>% mutate(AveDiff = SummedCol/GW_length)
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE)) %>%
z <- x %>% mutate(AveDiff = SummedCol/GW_length)
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE)) %>%
z <- x %>% mutate(AveDiff = SummedCol/GW_length))
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE)) %>%
z <- x %>% mutate(AveDiff = (SummedCol/GW_length))
library(tidyverse)
library(readr)
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE)) %>%
z <- x %>% mutate(AveDiff = SummedCol/GW_length)
z <- x %>% mutate(AveDiff = SummedCol/GW_length)
View(z)
y <- z[,-"SummedCol"]
y <- z[,-SummedCol]
y <- z %>% select(-SummedCol)
View(y)
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE))
View(x)
z <- x %>% mutate(AveDiff = SummedCol/GW_length)
View(z)
y <- z %>% select(-SummedCol)
View(y)
ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE))
Fix_Diff %>% select(Team, GW_Filter)  %>%
filter(Team == team) %>%
# Test it
#----------
new <- Rolling_Averages(Fix_Diff, "GW12")
Fix_Diff %>% select(Team, GW_Filter)  %>%
filter(Team == team)
Fix_Diff %>% select(Team, GW_Filter)
Fix_Diff %>% select(Team, GW_Filter)  %>%
# filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(Fix_Fiff)[1])) %>%
rowSums(na.rm = TRUE))
Fix_Diff %>% select(Team, GW_Filter)  %>%
# filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(Fix_Diff)[1])) %>%
rowSums(na.rm = TRUE))
Fix_Diff %>% select(Team, GW_Filter)  %>%
filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(Fix_Diff)[1])) %>%
rowSums(na.rm = TRUE))
library(tidyverse)
Fix_Diff %>% select(Team, GW_Filter)  %>%
filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(Fix_Diff)[1])) %>%
rowSums(na.rm = TRUE))
x <- ArsData %>% select(Team, GW_Filter)  %>%
#filter(Team == team) %>%
mutate(SummedCol = select(., GW_start:names(rev(ArsData)[1])) %>%
rowSums(na.rm = TRUE))
View(x)
rm(list=ls())
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
GW_start <- "GW12"
GW_length <- 6
team = 'Arsenal'
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
Fix_Diff <- read.csv("1.Data/FixtureDifficultiesv_01.csv")
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
View(new_df)
new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
View(sum_df)
sum_df %>% mutate(AveDiff = SummedCol/GW_length)
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
View(ave_diff)
ave_diff %>% select(Team, AveDiff)
final_set <- ave_diff %>% select(Team, AveDiff)
Get_Team_Diff <- function(Data, GW_start, GW_length, Team) {
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
# Sum the relevant gameweeks
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
# calculate the average difficulty
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
# remove columns that won't be used
final_set <- ave_diff %>% select(Team, AveDiff)
# Return final set as output
return(final_set)
}
Get_Team_Diff <- function(Data, GW_start, GW_length) {
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
# Sum the relevant gameweeks
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
# calculate the average difficulty
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
# remove columns that won't be used
final_set <- ave_diff %>% select(Team, AveDiff)
# Return final set as output
return(final_set)
}
Get_Team_Diff(Fix_Diff, "GW12", 6)
Get_Team_Diff(Fix_Diff, "GW13", 7)
Get_Team_Diff <- function(Data, GW_start, GW_length) {
# First create function that can specify the gameweeks
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
# Now we can focus on the data itself
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
# Sum the relevant gameweeks
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
# calculate the average difficulty
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
# remove columns that won't be used
final_set <- ave_diff %>% select(Team, AveDiff)
# Return final set as output
return(final_set)
}
rm(list=ls())
Get_Team_Diff <- function(Data, GW_start, GW_length) {
# First create function that can specify the gameweeks
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
# Now we can focus on the data itself
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
# Sum the relevant gameweeks
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
# calculate the average difficulty
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
# remove columns that won't be used
final_set <- ave_diff %>% select(Team, AveDiff)
# Return final set as output
return(final_set)
}
Get_Team_Diff(Fix_Diff, "GW12", 6)
Fix_Diff <- read.csv("1.Data/FixtureDifficultiesv_01.csv")
Get_Team_Diff(Fix_Diff, "GW12", 6)
Get_Team_Diff(Fix_Diff, "GW12", 5)
gw_12_17 <- Get_Team_Diff(Fix_Diff, "GW12", 3)
gw_12_14 <- Get_Team_Diff(Fix_Diff, "GW12", 3)
View(gw_12_14)
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
rm(list=ls())
Fix_Diff <- read.csv("1.Data/FixtureDifficultiesv_01.csv")
GW_start <- "GW12"
GW_length <- 3
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
# Sum the relevant gameweeks
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
# calculate the average difficulty
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
ave_diff
# calculate the average difficulty
three_weeks <-  ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
View(three_weeks)
Get_Team_Diff <- function(Data, GW_start, GW_length) {
# First create function that can specify the gameweeks
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
# Now we can focus on the data itself
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
# Sum the relevant gameweeks
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
# calculate the average difficulty
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
# remove columns that won't be used
final_set <- ave_diff %>% select(Team, AveDiff)
# Return final set as output
return(final_set)
}
gw_12_15 <- Get_Team_Diff(Fix_Diff, "GW12", 3)
View(gw_12_14)
View(gw_12_15)
View(three_weeks)
View(Fix_Diff)
gw_12_14 <- Get_Team_Diff(Fix_Diff, "GW12", 2)
View(gw_12_14)
gw_12_14 <- Get_Team_Diff(Fix_Diff, "GW12", 2) %>% filter(Team == "Chelsea")
View(gw_12_14)
gw_12_17 <- Get_Team_Diff(Fix_Diff, "GW12", 5)
View(gw_12_17)
row1 <- c(1:3)
row2 <- c(4:6)
row3 <- c(7:9)
dataframe_1 <- bind_rows(row1, row2, row3)
dataframe_1 <- rbindrow1, row2, row3)
dataframe_1 <- rbind(row1, row2, row3)
dataframe_1
dataframe_1 <- as.data.frame(dataframe_1)
dataframe_1
gw_13_38 <- Get_Team_Diff(Fix_Diff, "GW13", 26)
gw_13_38 <- Get_Team_Diff(Fix_Diff, "GW13", 25)
View(gw_13_38)
gw_13_38 <- Get_Team_Diff(Fix_Diff, "GW13", 25) %>% order_by(gw_13_38$AveDiff)
gw_13_38 <- Get_Team_Diff(Fix_Diff, "GW13", 25) %>% order_by(AveDiff)
View(gw_13_38)
?order_by
View(gw_13_38)
gw_13_38 <- gw_13_38[order(AveDiff)]
gw_13_38 <- gw_13_38[order(gw_13_38$AveDiff)]
gw_13_17 <- Get_Team_Diff(Fix_Diff, "GW13", 4)
View(gw_13_17)
gw_13_17 %>% mutate(Run_Diff =
if (AveDiff > 3.5) {
Run_Diff <- "Tough"
}
else if (AveDiff <= 3.5) {
Run_Diff <- "Easy"
}
)
gw_13_17$Run_Diff <- ifelse(gw_13_17$AveDiff > 3.5, "Tough", "Easy")
gw_13_17
View(gw_13_17)
gw_13_17$Run_Diff <- ifelse(gw_13_17$AveDiff >= 3.5, "Tough", "Easy")
View(gw_13_17)
Get_Team_Diff <- function(Data, GW_start, GW_length) {
# First create function that can specify the gameweeks
GW_Sub <- function(GW,GW_range){
gameweek_number <- substr(GW,3,4)   # Take the number out of the gameweek
gameweek_number <- as.numeric(gameweek_number)
GW_range <- as.numeric(GW_range)
gameweek_vector <- (gameweek_number:(gameweek_number + GW_range))
# Now we have our vector, lets add the "GW" back to each
# We will use lappy so it returns a list
a <- vector()
for (i in gameweek_vector) {
a[i] <- paste("GW",i)
a <-  a %>% na.omit(a)
}
new_range2 <- gsub(" ", "", a, fixed = TRUE)
}
# Now we can focus on the data itself
# First filter the dataset by the set of gameweeks that you want.
# Choose gameweeks
GW_Filter <- GW_Sub(GW_start, GW_range = GW_length)
# Create new dataset
new_df <- Fix_Diff %>% select(Team, GW_Filter)
# Sum the relevant gameweeks
sum_df <-  new_df %>% mutate(SummedCol = select(., GW_start:names(rev(new_df)[1])) %>%
rowSums(na.rm = TRUE))
# calculate the average difficulty
ave_diff <- sum_df %>% mutate(AveDiff = SummedCol/GW_length)
# remove columns that won't be used
final_set <- ave_diff %>% select(Team, AveDiff)
final_set$Run_Diff <- ifelse(final_set$AveDiff >= 3.5, "Tough", "Easy")
# Return final set as output
return(final_set)
}
gw_13_15 <- Get_Team_Diff(Fix_Diff, "GW13", 2)
View(gw_13_15)
gw_13_16 <- Get_Team_Diff(Fix_Diff, "GW13", 3)
View(gw_13_16)
View(Fix_Diff)
View(gw_13_15)
View(gw_13_16)
View(gw_13_16 %>% filter(Run_Diff == "Easy")
View(gw_13_16 %>% filter(Run_Diff == "Easy"))
View(gw_13_16 %>% filter(Run_Diff == "Easy"))
?dgamma
?lm
?show
?colSums
?predict
